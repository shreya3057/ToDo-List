{"version":3,"sources":["ToDoLists.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoLists","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItems","console","log","olditems","filter","arrElem","index","type","placeholder","value","onChange","event","target","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAgBeA,EAdG,SAACC,GAEf,OACI,mCACA,sBAAKC,UAAU,aAAf,UACI,mBAAGA,UAAU,cAAc,cAAY,OAAOC,QAAS,WACnDF,EAAMG,SAASH,EAAMI,OAGzB,mCAAMJ,EAAMK,KAAZ,aCkCGC,EAzCJ,WACT,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAcC,EAAd,KAUMC,EAAY,SAACR,GACjBS,QAAQC,IAAI,WACZH,GAAS,SAACI,GACR,OAAOA,EAASC,QAAO,SAACC,EAAQC,GAC9B,OAAOA,IAAQd,SAKrB,OACE,mCACA,qBAAKH,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,2CACA,uBACA,uBAAOkB,KAAK,OAAOC,YAAY,MAAMC,MAAOb,EAAWc,SAzB5C,SAACC,GAChBd,EAAac,EAAMC,OAAOH,UAyBtB,wBAAQnB,QAvBK,WACjBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAoBP,OAEtBC,EAAa,KAmBT,iBACA,6BAEGC,EAAMe,KAAI,SAACC,EAAQR,GACjB,OAAO,cAAC,EAAD,CAAuBd,GAAIc,EAAOb,KAAMqB,EAASvB,SAAUS,GAA3CM,gBCzBrBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6428731.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ToDoLists = (props)=>{\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"todo_style\">\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={()=>{\r\n                props.onSelect(props.id);\r\n            }}\r\n            />\r\n            <li> {props.text} </li>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\nexport default ToDoLists;","import React, { useState } from 'react'\nimport './App.css';\nimport ToDoLists from './ToDoLists';\nimport TodoList from './ToDoLists'\nconst App =() =>{\n  const [inputList,setInputList]=useState(\"\");\n  const [Items ,setItems]=useState([]);\n  const itemEvent =(event)=>{\n    setInputList(event.target.value);\n  };\n  const listOfItems =()=>{\n    setItems((olditems) =>{\n      return [...olditems,inputList];\n    });\n    setInputList(\"\");\n  };\n  const deleteItems=(id)=>{\n    console.log(\"Deleted\")\n    setItems((olditems)=>{\n      return olditems.filter((arrElem,index)=>{\n        return index!==id;  \n\n      });\n    });\n};\n  return(\n    <>\n    <div className=\"main_div\">\n      <div className=\"center_div\">\n        <br/>\n        <h1>ToDo List</h1>\n        <br/>\n        <input type=\"text\" placeholder=\"Add\" value={inputList} onChange={itemEvent}/>\n        <button onClick={listOfItems}> + </button>\n        <ol>\n          \n          {Items.map((itemval,index) => {\n             return <ToDoLists key={index} id={index} text={itemval} onSelect={deleteItems}/>\n          })}\n        </ol>\n      </div>\n    </div>\n    </>\n  );\n};\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}